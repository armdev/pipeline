version: '3.8'

services:    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000  

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8888:8080"
    depends_on:
      - kafka1
      - kafka2
    links:
      - kafka1
      - kafka2
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092 kafka2:9093  

  kafka1:
    image: confluentinc/cp-enterprise-kafka:7.0.9
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_BROKER_ID: 850
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://kafka1:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CREATE_TOPICS: "alert:3:2"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 336 # 2 weeks
      KAFKA_HEAP_OPTS: "-Xms2g -Xmx4g"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: ~/volumes/kafka1/logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/volumes/kafka1/850:/kafka
   

  kafka2:
    image: confluentinc/cp-enterprise-kafka:7.0.9
    container_name: kafka2
    ports:
      - "9093:9092"
      - "29093:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_BROKER_ID: 950
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://kafka2:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_HOURS: 336 # 2 weeks
      KAFKA_HEAP_OPTS: "-Xms2g -Xmx4g"
      KAFKA_CREATE_TOPICS: "alert:3:2"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: ~/volumes/kafka2/logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/volumes/kafka2/950:/kafka
   
 
  timescale:
    image: timescale/timescaledb:latest-pg15
    build: ./timescale
    container_name: timescaledb
    command: postgres -c max_connections=5000 -c shared_buffers=1GB -c effective_cache_size=2GB -c maintenance_work_mem=512MB  
    ports:
      - "5432:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/timescaledb
      - POSTGRES_DB=healthcare
      - POSTGRES_USER=healthcare
      - POSTGRES_PASSWORD=healthcare      
    volumes:
      - ~/volumes/data/timescaledb/logs/:/opt/postgres/logs
      - ~/volumes/data/timescaledb/data:/var/lib/postgresql/data/timescaledb
      - ./timescale/postgresql.conf:/etc/postgresql/postgresql.conf:rw     
      - ./timescale/init-script/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh:ro
    sysctls:
      - kernel.shmmax=100663296

  pgadmin:
    image: registry.gitlab.com/armdev/dockers/pgadmin:4
    container_name: pgadmin4
    restart: always    
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ~/volumes/data/pgbackup/_data/pgadmin:/var/lib/pgadmin

  eureka:
    image: eureka  
    build: ./eureka
    env_file: ./eureka/.env
    container_name: eureka 
    ports:
      - '8761:8761'  
  
      
  zipkin:    
    image: zipkin
    build: ./zipkin
    environment:
     STORAGE_TYPE: mem
    container_name: zipkin
    links:   
       - eureka   
    ports:
      - '9411:9411' 
 
      
  spadmin:
    image: spadmin  
    build: ./spadmin
    env_file: ./spadmin/.env
    container_name: spadmin        
    ports:
      - '1111:1111'
  
  eventcare:
    image: eventcare  
    build: ./eventcare  
    env_file: ./eventcare/.env
    container_name: eventcare
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 8G
    links:
       - zipkin
       - eureka
    ports:
      - '24000:24000'
      - '24010:24010'
      
      
  producer:
    image: producer  
    build: ./producer  
    env_file: ./producer/.env
    container_name: producer
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 8G
    links:
       - zipkin
       - eureka
    ports:
      - '25000:25000'
      - '25010:25010'
